version: "3.8"
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - check-in
  check-in-request-ms:
    container_name: check-in-request-ms
    build:
      context: ../../
      dockerfile: Dockerfile2
    ports:
      - "8081:8081"
    environment:
      DB_HOST: 192.168.0.13        # 외부 데이터베이스의 IP 주소
      DB_PORT: 3306                 # 데이터베이스 포트 (MySQL/MariaDB의 기본 포트)
      DB_USER: root         # 데이터베이스 사용자 이름
      DB_PASSWORD: 1234     # 데이터베이스 비밀번호
      DB_NAME: place         # 사용할 데이터베이스 이름
    restart: on-failure
    healthcheck:
      test: [ "CMD", "./healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./healthcheck.sh:/usr/local/bin/healthcheck.sh
    depends_on:
      - redis
    networks:
      - check-in
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: on-failure
    ports:
      - "9090:9090"
    volumes:
      - ../../../prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - check-in
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: on-failure
    ports:
      - "3000:3000"
    networks:
      - check-in
#  node_exporter:
#    image: prom/node-exporter:latest
#    container_name: node_exporter
#    restart: on-failure
#    ports:
#      - "9100:9100"
#    networks:
#      - monitoring
networks:
  check-in:
    driver: bridge

